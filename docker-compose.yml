# docker-compose.yml

version: '3.8'

services:
  backend:
    build: ./backend
    container_name: voicegenie_backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/src:/app/src
      - shared_audio:/app/audio_files
    env_file:
      - .env
    depends_on:
      - db
      - ollama
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    # --- ADD THIS ENTIRE HEALTHCHECK BLOCK ---
    healthcheck:
      # This command checks if the backend's root URL is responding.
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s         # How often to run the check
      timeout: 10s          # How long to wait for a response
      retries: 5            # How many times to retry before failing
      start_period: 180s    # Grace period for the container to start up and load models

  frontend:
    build: ./frontend
    container_name: voicegenie_frontend
    ports:
      - "3000:80"
    # --- MODIFY THIS depends_on BLOCK ---
    depends_on:
      backend:
        condition: service_healthy # This makes the frontend wait until the backend is fully ready

  db:
    image: postgres:15-alpine
    container_name: voicegenie_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=voicegenie_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d voicegenie_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    image: ollama/ollama
    container_name: voicegenie_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama

volumes:
  postgres_data:
  ollama_data:
  shared_audio: