# docker-compose.yml

services:
  api:
    build: ./backend
    container_name: voice-marketing-agent-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/src:/app/src
      - shared_audio:/app/audio_files
    env_file:
      - .env
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      # The API now only explicitly waits for the database.
      # It will wait for Ollama in its own code.
      db:
        condition: service_healthy
    healthcheck:
      # This healthcheck is still good. It tells us when the whole app is ready.
      test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 300s # Keep this generous for model downloads

  dashboard:
    build: ./frontend
    container_name: voice-marketing-agent-frontend
    ports:
      - "3000:80"
    depends_on:
      api:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    container_name: voice-marketing-agent-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=voicegenie_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d voicegenie_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    image: ollama/ollama
    container_name: voice-marketing-agent-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    # --- WE HAVE REMOVED THE HEALTHCHECK FROM OLLAMA ENTIRELY ---
    # Our Python backend is now responsible for waiting for it.

volumes:
  postgres_data:
  ollama_data:
  shared_audio: